{"version":3,"file":"SigninPage-DIHQ4Oha.js","sources":["../../src/components/AuthForm/AuthForm.jsx","../../src/pages/SigninPage/SigninPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport { logIn } from '../../redux/auth/operations';\r\nimport css from './AuthForm.module.css';\r\nimport * as Yup from 'yup';\r\nimport { Field, Form, Formik, ErrorMessage } from 'formik';\r\nimport { useState, useId } from 'react';\r\nimport { FaRegEye } from 'react-icons/fa6';\r\nimport { FaRegEyeSlash } from 'react-icons/fa6';\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\nconst AuthForm = () => {\r\n  const [type, setType] = useState('password');\r\n  const [openPsw, setOpenPsw] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (values, actions) => {\r\n    const userData = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    dispatch(logIn(userData)).unwrap();\r\n    actions.resetForm();\r\n  };\r\n\r\n  const login = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email('Please enter a valid email address')\r\n      .required('Email is Required'),\r\n    password: Yup.string()\r\n      .min(8, 'Password must be at least 8 characters')\r\n      .max(64, 'Password must be no more than 64 characters')\r\n      .required('Password is Required'),\r\n  });\r\n\r\n  const mailFieldId = useId();\r\n  const passwordFieldId = useId();\r\n  const togglePassInput = () => {\r\n    if (type === 'password') {\r\n      setType('text');\r\n      setOpenPsw(false);\r\n    } else {\r\n      setType('password');\r\n      setOpenPsw(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validationSchema={login}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className={css.formContainer} name=\"Sign In\" noValidate>\r\n            <label htmlFor={mailFieldId} className={css.label}>\r\n              Enter your email\r\n            </label>\r\n            <div className={css.wrap}>\r\n              <Field\r\n                type=\"email\"\r\n                name=\"email\"\r\n                // autoComplete=\"off\"\r\n                id={mailFieldId}\r\n                className={\r\n                  errors.email && touched.email\r\n                    ? `${css.inputField} ${css.inputError}` // Добавляем класс ошибки\r\n                    : css.inputField\r\n                }\r\n                placeholder=\"Email\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"span\"\r\n                className={css.errorMessage}\r\n              />\r\n            </div>\r\n\r\n            <label htmlFor={passwordFieldId} className={css.label}>\r\n              Enter your password\r\n            </label>\r\n            <div className={css.wrap_pswd}>\r\n              <Field\r\n                type={type}\r\n                name=\"password\"\r\n                // value={password}\r\n                // onChange={handleChange}\r\n                // // autoComplete=\"off\"\r\n                id={passwordFieldId}\r\n                // className={css.inputField_pswd}\r\n                className={\r\n                  errors.email && touched.email\r\n                    ? `${css.inputField_pswd} ${css.inputError}` // Добавляем класс ошибки\r\n                    : css.inputField_pswd\r\n                }\r\n                placeholder=\"Password\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"span\"\r\n                className={css.errorMessage}\r\n              />\r\n              <span>\r\n                {openPsw ? (\r\n                  <FaRegEyeSlash\r\n                    name=\"password\"\r\n                    id={`${passwordFieldId}-password`}\r\n                    className={css.eye}\r\n                    onClick={togglePassInput}\r\n                  />\r\n                ) : (\r\n                  <FaRegEye\r\n                    name=\"outPassword\"\r\n                    id={`${passwordFieldId}-password`}\r\n                    className={css.eye}\r\n                    onClick={togglePassInput}\r\n                  />\r\n                )}\r\n              </span>\r\n              {/* <span className={css.stars}>{maskedPassword}</span> */}\r\n            </div>\r\n\r\n            <button type=\"submit\" className={css.submitButton}>\r\n              Sign In\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { NavLink } from 'react-router-dom';\r\nimport AuthForm from '../../components/AuthForm/AuthForm';\r\n\r\nimport css from './SigninPage.module.css';\r\n\r\nconst SigninPage = () => {\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.background}>\r\n        <div className={css.image}></div>\r\n        <div className={css.container_signin}>\r\n          <h2 className={css.title}>Sign In</h2>\r\n          <AuthForm />\r\n          <div className={css.container_links}>\r\n            <NavLink className={css.link} to=\"/forgot-password\">\r\n              Forgot your password?\r\n            </NavLink>\r\n            <NavLink className={css.link} to=\"/signup\">\r\n              Sign up\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SigninPage;\r\n"],"names":["AuthForm","type","setType","useState","openPsw","setOpenPsw","dispatch","useDispatch","onSubmit","values","actions","userData","logIn","login","Yup.object","Yup.string","mailFieldId","useId","passwordFieldId","togglePassInput","jsxs","Fragment","jsx","Toaster","Formik","errors","touched","Form","css","Field","ErrorMessage","FaRegEyeSlash","FaRegEye","SigninPage","NavLink"],"mappings":"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"}