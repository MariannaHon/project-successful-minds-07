{"version":3,"file":"SignupPage-Z3CjpINE.js","sources":["../../src/components/RegisterForm/RegisterForm.jsx","../../src/pages/SignupPage/SignupPage.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { register } from '../../redux/auth/operations';\r\n//import toast from 'react-hot-toast';\r\nimport css from './RegisterForm.module.css';\r\nimport { FaRegEye, FaRegEyeSlash } from 'react-icons/fa6';\r\nimport { useId, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RegisterForm = () => {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [type, setType] = useState('password');\r\n\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (values, actions) => {\r\n    const newUser = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    dispatch(register(newUser));\r\n    actions.resetForm();\r\n  };\r\n\r\n  const formSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email('Invalid email address')\r\n      .required('Email is Required'),\r\n    password: Yup.string()\r\n      .min(8, 'Too short password')\r\n      .max(64, 'Too long password')\r\n      .required('Password is Required'),\r\n    repeatPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n      .required('Repeat Password is Required'),\r\n  });\r\n\r\n  const togglePassInput = () => {\r\n    setType(isOpen ? 'text' : 'password');\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const id = useId();\r\n\r\n  return (\r\n    <div className={css.registerWrapper}>\r\n      <div className={css.registerContainer}>\r\n        <div className={css.background}></div>\r\n        <div className={css.formBoxPosition}>\r\n          <p className={css.description}>Sign Up</p>\r\n          <Formik\r\n            initialValues={{ email: '', password: '', repeatPassword: '' }}\r\n            onSubmit={onSubmit}\r\n            validationSchema={formSchema}\r\n          >\r\n            {({ errors, touched }) => (\r\n              <Form className={css.form} noValidate>\r\n                <div className={css.formContainer}>\r\n                  <label className={css.label} htmlFor=\"email\">\r\n                    Enter your email\r\n                  </label>\r\n                  <div>\r\n                    <Field\r\n                      className={`${css.input} ${\r\n                        errors.email && touched.email\r\n                          ? errors.email === 'Email is Required'\r\n                            ? css.required\r\n                            : css.invalid\r\n                          : touched.email && !errors.email\r\n                          ? css.valid\r\n                          : ''\r\n                      }`}\r\n                      id={`${id}-email`}\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      autoComplete=\"off\"\r\n                      placeholder=\"E-mail\"\r\n                    />\r\n                  </div>\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"span\"\r\n                    className={css.error}\r\n                  />\r\n                </div>\r\n\r\n                <div className={css.formContainer}>\r\n                  <label className={css.label} htmlFor=\"password\">\r\n                    Enter your password\r\n                  </label>\r\n                  <div className={css.iconPosition}>\r\n                    <Field\r\n                      id={`${id}-password`}\r\n                      className={`${css.input} ${\r\n                        errors.password && touched.password\r\n                          ? errors.password === 'Too short password'\r\n                            ? css.short\r\n                            : errors.password === 'Too long password'\r\n                            ? css.long\r\n                            : errors.password === 'Password is Required'\r\n                            ? css.required\r\n                            : css.invalid\r\n                          : touched.password && !errors.password\r\n                          ? css.valid\r\n                          : ''\r\n                      }`}\r\n                      type={type}\r\n                      name=\"password\"\r\n                      autoComplete=\"new-password\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n\r\n                    {isOpen ? (\r\n                      <FaRegEyeSlash\r\n                        name=\"password\"\r\n                        id={`${id}-password`}\r\n                        className={css.passEye}\r\n                        onClick={togglePassInput}\r\n                      />\r\n                    ) : (\r\n                      <FaRegEye\r\n                        name=\"password\"\r\n                        id={`${id}-password`}\r\n                        className={css.passEye}\r\n                        onClick={togglePassInput}\r\n                      />\r\n                    )}\r\n                  </div>\r\n\r\n                  <ErrorMessage\r\n                    name=\"password\"\r\n                    component=\"span\"\r\n                    className={css.error}\r\n                  />\r\n                </div>\r\n                <div className={css.formContainer}>\r\n                  <label className={css.label} htmlFor=\"repeatPassword\">\r\n                    Repeat password\r\n                  </label>\r\n                  <div className={css.iconPosition}>\r\n                    <Field\r\n                      id={`${id}-repeatPassword`}\r\n                      className={`${css.input} ${\r\n                        errors.repeatPassword && touched.repeatPassword\r\n                          ? css.mismatch\r\n                          : touched.repeatPassword && !errors.repeatPassword\r\n                          ? css.valid\r\n                          : ''\r\n                      }`}\r\n                      type={isOpen ? 'password' : 'text'}\r\n                      name=\"repeatPassword\"\r\n                      autoComplete=\"new-password\"\r\n                      placeholder=\"Repeat password\"\r\n                    />\r\n\r\n                    {isOpen ? (\r\n                      <FaRegEyeSlash\r\n                        name=\"repeatPassword\"\r\n                        id={`${id}-repeatPassword`}\r\n                        className={css.repPassEye}\r\n                        onClick={togglePassInput}\r\n                      />\r\n                    ) : (\r\n                      <FaRegEye\r\n                        name=\"repeatPassword\"\r\n                        id={`${id}-repeatPassword`}\r\n                        className={css.repPassEye}\r\n                        onClick={togglePassInput}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <ErrorMessage\r\n                    name=\"repeatPassword\"\r\n                    component=\"span\"\r\n                    className={css.error}\r\n                  />\r\n                </div>\r\n                <button className={css.button} type=\"submit\">\r\n                  Sign Up\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n          <div className={css.image} alt=\"BottleLogo\">\r\n            <Link className={css.link} to=\"/signin\">\r\n              Sign in\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import RegisterForm from '../../components/RegisterForm/RegisterForm';\r\nconst SignupPage = () => {\r\n  return <RegisterForm />;\r\n};\r\nexport default SignupPage;\r\n"],"names":["RegisterForm","isOpen","setIsOpen","useState","type","setType","dispatch","useDispatch","onSubmit","values","actions","newUser","register","formSchema","Yup.object","Yup.string","Yup.ref","togglePassInput","id","useId","jsx","css","jsxs","Formik","errors","touched","Form","Field","ErrorMessage","FaRegEyeSlash","FaRegEye","Link","SignupPage"],"mappings":"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"}