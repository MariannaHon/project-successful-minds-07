{"version":3,"file":"SigninPage-e4aacba8.js","sources":["../../src/components/AuthForm/AuthForm.jsx","../../src/pages/SigninPage/SigninPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport css from './AuthForm.module.css';\nimport * as Yup from 'yup';\nimport { Field, Form, Formik, ErrorMessage } from 'formik';\nimport { useState, useId } from 'react';\nimport { FaRegEye } from 'react-icons/fa6';\nimport { FaRegEyeSlash } from 'react-icons/fa6';\nimport { Toaster } from 'react-hot-toast';\n\nconst AuthForm = () => {\n  const [type, setType] = useState('password');\n\tconst [openPsw, setOpenPsw] = useState(true);\n\t\n\tconst dispatch = useDispatch();\n\t\n  const onSubmit = (values, actions) => {\n    const userData = {\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(logIn(userData)).unwrap();\n    actions.resetForm();\n  };\n\n  const login = Yup.object().shape({\n    email: Yup.string()\n      .email('Please enter a valid email address')\n      .required('Email is Required'),\n    password: Yup.string()\n      .min(8, 'Password must be at least 8 characters')\n      .max(64, 'Password must be no more than 64 characters')\n      .required('Password is Required'),\n  });\n\n  const mailFieldId = useId();\n  const passwordFieldId = useId();\n  const togglePassInput = () => {\n    if (type === 'password') {\n      setType('text');\n      setOpenPsw(false);\n    } else {\n      setType('password');\n      setOpenPsw(true);\n    }\n  };\n\n  return (\n    <>\n      <Toaster />\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={login}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form className={css.form} name=\"Sign In\" noValidate>\n            <div className={css.formContainer}>\n              <label htmlFor={mailFieldId} className={css.label}>\n                Enter your email\n              </label>\n              <div className={css.wrap}>\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  autoComplete=\"off\"\n                  id={mailFieldId}\n                  className={`${css.input} ${\n                    errors.email && touched.email\n                      ? errors.email === 'Email is Required'\n                        ? css.required\n                        : css.invalid\n                      : touched.email && !errors.email\n                      ? css.valid\n                      : ''\n                  }`}\n                  placeholder=\"Email\"\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"span\"\n                  className={css.error}\n                />\n              </div>\n            </div>\n\n            <div className={css.formContainer}>\n              <label htmlFor={passwordFieldId} className={css.label}>\n                Enter your password\n              </label>\n              <div className={css.wrap}>\n                <Field\n                  type={type}\n                  name=\"password\"\n                  autoComplete=\"off\"\n                  id={passwordFieldId}\n                  className={`${css.input} ${\n                    errors.password && touched.password\n                      ? errors.password ===\n                        'Password must be at least 8 characters'\n                        ? css.short\n                        : errors.password ===\n                          'Password must be no more than 64 characters'\n                        ? css.long\n                        : errors.password === 'Password is Required'\n                        ? css.required\n                        : css.invalid\n                      : touched.password && !errors.password\n                      ? css.valid\n                      : ''\n                  }`}\n                  placeholder=\"Password\"\n                />\n                <span>\n                  {openPsw ? (\n                    <FaRegEyeSlash\n                      name=\"password\"\n                      id={`${passwordFieldId}-password`}\n                      className={css.eye}\n                      onClick={togglePassInput}\n                    />\n                  ) : (\n                    <FaRegEye\n                      name=\"outPassword\"\n                      id={`${passwordFieldId}-password`}\n                      className={css.eye}\n                      onClick={togglePassInput}\n                    />\n                  )}\n                </span>\n              </div>\n              <ErrorMessage\n                name=\"password\"\n                component=\"span\"\n                className={css.error}\n              />\n            </div>\n\n            <button type=\"submit\" className={css.button}>\n              Sign In\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { NavLink } from 'react-router-dom';\nimport AuthForm from '../../components/AuthForm/AuthForm';\n\nimport css from './SigninPage.module.css';\n\nconst SigninPage = () => {\n  return (\n    <div className={css.container}>\n      <div className={css.background}>\n        <div className={css.image}></div>\n        <div className={css.container_signin}>\n          <h2 className={css.title}>Sign In</h2>\n          <AuthForm />\n          <div className={css.container_links}>\n            <NavLink className={css.link} to=\"/forgot-password\">\n              Forgot your password?\n            </NavLink>\n            <NavLink className={css.link} to=\"/signup\">\n              Sign up\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SigninPage;\n"],"names":["AuthForm","type","setType","useState","openPsw","setOpenPsw","dispatch","useDispatch","onSubmit","values","actions","userData","logIn","login","Yup.object","Yup.string","mailFieldId","useId","passwordFieldId","togglePassInput","jsxs","Fragment","jsx","Toaster","Formik","errors","touched","Form","css","Field","ErrorMessage","FaRegEyeSlash","FaRegEye","SigninPage","NavLink"],"mappings":"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"}