{"version":3,"file":"SignupPage-95618e8f.js","sources":["../../src/components/RegisterForm/RegisterForm.jsx","../../src/pages/SignupPage/SignupPage.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { register } from '../../redux/auth/operations';\n//import toast from 'react-hot-toast';\nimport css from './RegisterForm.module.css';\nimport { FaRegEye, FaRegEyeSlash } from 'react-icons/fa6';\nimport { useId, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RegisterForm = () => {\n  const [isOpen, setIsOpen] = useState(true);\n  const [type, setType] = useState('password');\n\n\tconst dispatch = useDispatch();\n\t\n  const onSubmit = (values, actions) => {\n    const newUser = {\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(register(newUser));\n    actions.resetForm();\n  };\n\n  const formSchema = Yup.object().shape({\n    email: Yup.string()\n      .email('Please enter a valid email address')\n      .required('Email is Required'),\n    password: Yup.string()\n      .min(8, 'Password must be at least 8 characters')\n      .max(64, 'Password must be no more than 64 characters')\n      .required('Password is Required'),\n    repeatPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Repeat Password is Required'),\n  });\n\n  const togglePassInput = () => {\n    setType(isOpen ? 'text' : 'password');\n    setIsOpen(!isOpen);\n  };\n\n  const id = useId();\n\n  return (\n    <div className={css.registerWrapper}>\n      <div className={css.registerContainer}>\n        <div className={css.background}></div>\n        <div className={css.formBoxPosition}>\n          <p className={css.description}>Sign Up</p>\n          <Formik\n            initialValues={{ email: '', password: '', repeatPassword: '' }}\n            onSubmit={onSubmit}\n            validationSchema={formSchema}\n          >\n            {({ errors, touched }) => (\n              <Form className={css.form} noValidate>\n                <div className={css.formContainer}>\n                  <label className={css.label} htmlFor=\"email\">\n                    Enter your email\n                  </label>\n                  <div>\n                    <Field\n                      className={`${css.input} ${\n                        errors.email && touched.email\n                          ? errors.email === 'Email is Required'\n                            ? css.required\n                            : css.invalid\n                          : touched.email && !errors.email\n                          ? css.valid\n                          : ''\n                      }`}\n                      id={`${id}-email`}\n                      type=\"email\"\n                      name=\"email\"\n                      autoComplete=\"off\"\n                      placeholder=\"E-mail\"\n                    />\n                  </div>\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"span\"\n                    className={css.error}\n                  />\n                </div>\n\n                <div className={css.formContainer}>\n                  <label className={css.label} htmlFor=\"password\">\n                    Enter your password\n                  </label>\n                  <div className={css.iconPosition}>\n                    <Field\n                      id={`${id}-password`}\n                      className={`${css.input} ${\n                        errors.password && touched.password\n                          ? errors.password ===\n                            'Password must be at least 8 characters'\n                            ? css.short\n                            : errors.password ===\n                              'Password must be no more than 64 characters'\n                            ? css.long\n                            : errors.password === 'Password is Required'\n                            ? css.required\n                            : css.invalid\n                          : touched.password && !errors.password\n                          ? css.valid\n                          : ''\n                      }`}\n                      type={type}\n                      name=\"password\"\n                      autoComplete=\"new-password\"\n                      placeholder=\"Password\"\n                    />\n\n                    {isOpen ? (\n                      <FaRegEyeSlash\n                        name=\"password\"\n                        id={`${id}-password`}\n                        className={css.passEye}\n                        onClick={togglePassInput}\n                      />\n                    ) : (\n                      <FaRegEye\n                        name=\"password\"\n                        id={`${id}-password`}\n                        className={css.passEye}\n                        onClick={togglePassInput}\n                      />\n                    )}\n                  </div>\n\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"span\"\n                    className={css.error}\n                  />\n                </div>\n                <div className={css.formContainer}>\n                  <label className={css.label} htmlFor=\"repeatPassword\">\n                    Repeat password\n                  </label>\n                  <div className={css.iconPosition}>\n                    <Field\n                      id={`${id}-repeatPassword`}\n                      className={`${css.input} ${\n                        errors.repeatPassword && touched.repeatPassword\n                          ? css.mismatch\n                          : touched.repeatPassword && !errors.repeatPassword\n                          ? css.valid\n                          : ''\n                      }`}\n                      type={isOpen ? 'password' : 'text'}\n                      name=\"repeatPassword\"\n                      autoComplete=\"new-password\"\n                      placeholder=\"Repeat password\"\n                    />\n\n                    {isOpen ? (\n                      <FaRegEyeSlash\n                        name=\"repeatPassword\"\n                        id={`${id}-repeatPassword`}\n                        className={css.repPassEye}\n                        onClick={togglePassInput}\n                      />\n                    ) : (\n                      <FaRegEye\n                        name=\"repeatPassword\"\n                        id={`${id}-repeatPassword`}\n                        className={css.repPassEye}\n                        onClick={togglePassInput}\n                      />\n                    )}\n                  </div>\n                  <ErrorMessage\n                    name=\"repeatPassword\"\n                    component=\"span\"\n                    className={css.error}\n                  />\n                </div>\n                <button className={css.button} type=\"submit\">\n                  Sign Up\n                </button>\n              </Form>\n            )}\n          </Formik>\n          <div className={css.image} alt=\"BottleLogo\">\n            <Link className={css.link} to=\"/signin\">\n              Sign in\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from '../../components/RegisterForm/RegisterForm';\nconst SignupPage = () => {\n  return <RegisterForm />;\n};\nexport default SignupPage;\n"],"names":["RegisterForm","isOpen","setIsOpen","useState","type","setType","dispatch","useDispatch","onSubmit","values","actions","newUser","register","formSchema","Yup.object","Yup.string","Yup.ref","togglePassInput","id","useId","jsx","css","jsxs","Formik","errors","touched","Form","Field","ErrorMessage","FaRegEyeSlash","FaRegEye","Link","SignupPage"],"mappings":"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"}